{"version":3,"sources":["components/BurgersMade.js","firebase.js","components/BurgersEaten.js","App.js","reportWebVitals.js","index.js"],"names":["BurgersMade","db","burgerList","makeBurger","eatBurger","useState","name","setName","className","type","value","onChange","e","target","onClick","preventDefault","map","burger","eaten","bind","id","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","BurgersEaten","poopBurger","App","setBurgerList","useEffect","renderList","burgersArray","collection","get","then","fbData","forEach","doc","newData","data","push","style","display","flexDirection","justifyContent","alignItems","color","set","update","delete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c52486b4.chunk.js","sourcesContent":["import React, {  useState } from 'react';\n\nconst BurgersMade = ({db, burgerList, makeBurger, eatBurger}) => {\n\n  const [name, setName] = useState(\"\");\n\n  const onChange = (e) => setName(e.target.value);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        makeBurger(name);\n        setName(\"\");\n    };\n\n    return(\n        <>\n        <h2>Burgers Made</h2>\n            <input className=\"nameInput\" type=\"text\" name=\"name\" value={name} onChange={onChange}/>\n            <button onClick={onSubmit} className=\"makeButton\"> Make it</button>\n        <ul className=\"list\">\n            {burgerList.map(\n                burger => {if (!burger.eaten){\n                    return <><li className=\"listItem\"><span className=\"itemSpan\">{burger.name}</span><button className=\"eatButton\" onClick={eatBurger.bind(this, burger.id)}> Eat It! </button></li></>\n                }} \n            )}\n        </ul>\n        </>\n    )\n}\n\nexport default BurgersMade;\n","import firebase from \"firebase\";\n  // Your web app's Firebase configuration\n  // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n  const firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyC8puLjYd1BvbSwcLVg9XhfYEXRhC4ZdGg\",\n    authDomain: \"burgerapp-c26b9.firebaseapp.com\",\n    databaseURL: \"https://burgerapp-c26b9-default-rtdb.firebaseio.com\",\n    projectId: \"burgerapp-c26b9\",\n    storageBucket: \"burgerapp-c26b9.appspot.com\",\n    messagingSenderId: \"10408944967\",\n    appId: \"1:10408944967:web:0d86d93db4cbafaa19d862\",\n    measurementId: \"G-R2GB9S1BRS\"\n});\n\n  const db = firebaseApp.firestore();\n  // const auth = firebase.auth();\n  \n  export default db;\n\n\n\n","import React, { useEffect } from 'react';\nimport firebase from \"firebase\";\nimport db from '../firebase'\n\n\nconst BurgersEaten = ({db, burgerList, poopBurger}) => {\n\n    return(\n        <>\n        <h2>Burgers Eaten</h2>\n        <ul className=\"list\">\n            {burgerList.map(\n                burger => {if (burger.eaten){\n                    return <><li className=\"listItem\"><span className=\"itemSpan\">{burger.name}</span><button className=\"poopButton\" onClick={poopBurger.bind(this, burger.id)}>&#128169; Poop It! &#128169;</button></li></>\n                }} \n            )}\n        </ul>\n        </>\n    )\n}\n\nexport default BurgersEaten;\n","import React, { useState, useEffect } from 'react';\nimport BurgersMade from './components/BurgersMade';\nimport BurgersEaten from './components/BurgersEaten';\nimport './App.css';\nimport firebase from \"firebase\";\nimport db from './firebase';\n\nfunction App() {\n\n  const [burgerList, setBurgerList] = useState ([]);\n\n  useEffect(() => {\n    renderList()\n  }, []);\n\n  const poopBurger = (id) => {\n         firebase.firestore().collection(\"burgers\")\n            .doc(id)\n            .delete()\n            .then(() => {\n              renderList();\n            })\n    }\n\n    const makeBurger = (name) => {\n        let burgersArray = []\n        const data = {\n          id: firebase\n              .firestore()\n              .collection(\"burgers\")\n              .doc().id,\n          };\n\n        const db = firebase.firestore();\n            db.collection(\"burgers\")\n            .doc(data.id)\n            .set({ name: name, eaten: false, id: data.id })\n            .then(() => {\n              renderList()\n            })\n\n            // console.log(name)\n    }\n\n    const eatBurger = (id) => {\n        const db = firebase.firestore();\n         db.collection(\"burgers\")\n            .doc(id)\n            .update({ eaten: true })\n            .then(() => {\n              renderList();\n            })\n    }\n\n    const renderList = () => {\n      let burgersArray = []\n      db.collection(\"burgers\")\n        .get()\n        .then(function(fbData) {        \n          fbData.forEach(function(doc) {\n            let newData = { name: doc.data().name, eaten: doc.data().eaten, id: doc.id };\n            burgersArray.push(newData)\n          })\n          setBurgerList(burgersArray);\n        })\n    }\n\n    const wrapper={\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        color: '#fff'\n    }\n\n  return (\n    <div className=\"App\" style={wrapper}>\n      <h1>Making Some Burgers</h1>\n      <header className=\"App-header\">\n        <BurgersMade firebase={db} burgerList={burgerList} makeBurger={makeBurger} eatBurger={eatBurger}/>\n        <BurgersEaten firebase={db} burgerList={burgerList} poopBurger={poopBurger}/>\n      </header>\n    </div>\n  );\n\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}